//1 Fibonacci Series using recursion:- 

#include<iostream>
using namespace std;

int fib(int input)  //The point at which you want the fibonacci sequence to exist
{
    if(input==0 || input==1)
    {
        return 1;
    }
    int Final_answer;
    Final_answer = fib(input-1) + fib(input-2);
    return Final_answer;
}
int main()
{
    int input;
    cout<<"Enter the number you want to find the fibonicci series to : ";
    cin>>input;
    cout<<fib(input);

    return 0;
}

//2 Selection sort using recursion:- 

#include <iostream>
using namespace std;
int minIndex(int a[], int i, int j)
{
    if (i == j)
        return i;
 
    int k = minIndex(a, i + 1, j);
 
    return (a[i] < a[k])? i : k;
}

void recurSelectionSort(int a[], int n, int index = 0)
{
    if (index == n)
       return;
 
    int k = minIndex(a, index, n-1);
 
    if (k != index)
    {
       swap(a[k], a[index]);
    }
    recurSelectionSort(a, n, index + 1);
}

int main()
{
    int x;
    cout<<"Size of array: ";
    cin>>x;
    int arr[x];
    for(int i=0;i<x;i++)
    {
        cin>>arr[i];
    }
    int n = sizeof(arr)/sizeof(arr[0]);
    recurSelectionSort(arr, n);
    for (int i = 0; i<n ; i++)
        cout << arr[i] << " ";
    cout << endl;
    return 0;
}
